table discount
	lineageTag: 86a667fe-4327-44f5-b8d7-eb18366cd8d9

	column OrderNumber
		dataType: int64
		formatString: 0
		lineageTag: ee2ac743-487f-41a8-801b-9205d3de469b
		summarizeBy: none
		sourceColumn: OrderNumber

		annotation SummarizationSetBy = Automatic

	column ProductSequenceDiscount
		dataType: double
		lineageTag: fce36b07-c0e3-4df9-9096-4b9f79f9e48c
		summarizeBy: sum
		sourceColumn: ProductSequenceDiscount

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition discount = m
		mode: import
		source = ```
				let
				  Source = Json.Document(
				    File.Contents(
				      "C:\Users\KlausFolz\Desktop\Repositories\DataMechanics\Posts\Chain discount\Data\discount.json"
				    )
				  ), 
				  #"Converted to Table" = Table.FromList(
				    Source, 
				    Splitter.SplitByNothing(), 
				    null, 
				    null, 
				    ExtraValues.Error
				  ), 
				  #"Expanded Column1" = Table.ExpandRecordColumn(
				    #"Converted to Table", 
				    "Column1", 
				    {"OrderNumber", "discountValue", "DiscountSequence"}, 
				    {"OrderNumber", "discountValue", "DiscountSequence"}
				  ), 
				  #"Changed Type" = Table.TransformColumnTypes(
				    #"Expanded Column1", 
				    {{"OrderNumber", Int64.Type}, {"discountValue", type number}, {"DiscountSequence", Int64.Type}}
				  ), 
				  #"Filtered Rows" = Table.SelectRows(
				    #"Changed Type", 
				    each (
				      [OrderNumber] = 1001 or [OrderNumber] = 1003 or [OrderNumber] = 1004 or [OrderNumber] = 1005
				    )
				  ), 
				  #"Added Custom" = Table.AddColumn(
				    #"Filtered Rows", 
				    "OneMinusDiscount", 
				    each 1 - [discountValue], 
				    type number
				  ), 
				  #"Grouped Rows" = Table.Group(
				    #"Added Custom", 
				    {"OrderNumber"}, 
				    {{"ProductSequenceDiscount", each List.Product([OneMinusDiscount]), type number}}
				  )
				in
				  #"Grouped Rows"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

